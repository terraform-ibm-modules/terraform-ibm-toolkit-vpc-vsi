id: github.com/terraform-ibm-modules/terraform-ibm-toolkit-vpc-vsi
name: ibm-vpc-vsi
type: terraform
description: Module to provision virtual server instance
tags:
  - tools
  - infrastructure
  - virtual server
versions:
  - platforms: []
    providers:
      - name: ibm
        source: ibm-cloud/ibm
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
        moduleRef:
          id: resource_group
          output: id
      - name: region
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
        scope: global
      - name: ibmcloud_api_key
        type: string
        description: The IBM Cloud api token
        scope: global
      - name: vpc_name
        type: string
        description: The name of the vpc instance
        moduleRef:
          id: vpc
          output: name
      - name: label
        type: string
        description: The label for the server instance
        default: server
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-6-minimal-amd64-3
      - name: vpc_subnet_count
        type: number
        description: Number of vpc subnets
        moduleRef:
          id: subnets
          output: count
      - name: vpc_subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
        moduleRef:
          id: subnets
          output: subnets
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
      - name: ssh_key_id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        moduleRef:
          id: vpcssh
          output: id
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
      - name: init_script
        type: string
        default: ''
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
      - name: tags
        type: list(string)
        default: []
        description: Tags that should be added to the instance
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
      - name: kms_key_crn
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
        moduleRef:
          id: kms_key
          output: crn
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
      - name: security_group_rules
        type: |-
          list(object({
               name=string,
               direction=string,
               remote=optional(string),
               ip_version=optional(string),
               tcp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               icmp=optional(object({
                 type=number,
                 code=optional(number)
               })),
             }))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: '[]'
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
      - name: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        moduleRef:
          id: vpc
          output: base_security_group
      - name: acl_rules
        type: |-
          list(object({
               name=string,
               action=string,
               direction=string,
               source=string,
               destination=string,
               tcp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               icmp=optional(object({
                 type=number,
                 code=optional(number)
               })),
             }))
        description: List of rules to set on the subnet access control list
        default: '[]'
      - name: target_network_range
        type: string
        description: >-
          The ip address range that should be used for the network acl rules
          generated from the security groups
        default: 0.0.0.0/0
    version: v1.12.3
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: output network_interface_ids {
      - name: output count {
        description: >-
          The number of vsi instances created. Should be the same as
          length(names)
  - platforms: []
    providers:
      - name: ibm
        source: ibm-cloud/ibm
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
        moduleRef:
          id: resource_group
          output: id
      - name: region
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
        scope: global
      - name: ibmcloud_api_key
        type: string
        description: The IBM Cloud api token
        scope: global
      - name: vpc_name
        type: string
        description: The name of the vpc instance
        moduleRef:
          id: vpc
          output: name
      - name: label
        type: string
        description: The label for the server instance
        default: server
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-6-minimal-amd64-3
      - name: vpc_subnet_count
        type: number
        description: Number of vpc subnets
        moduleRef:
          id: subnets
          output: count
      - name: vpc_subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
        moduleRef:
          id: subnets
          output: subnets
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
      - name: ssh_key_id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        moduleRef:
          id: vpcssh
          output: id
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
      - name: init_script
        type: string
        default: ''
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
      - name: tags
        type: list(string)
        default: []
        description: Tags that should be added to the instance
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
      - name: kms_key_crn
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
        moduleRef:
          id: kms_key
          output: crn
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
      - name: security_group_rules
        type: |-
          list(object({
               name=string,
               direction=string,
               remote=optional(string),
               ip_version=optional(string),
               tcp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               icmp=optional(object({
                 type=number,
                 code=optional(number)
               })),
             }))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: '[]'
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
      - name: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        moduleRef:
          id: vpc
          output: base_security_group
      - name: acl_rules
        type: |-
          list(object({
               name=string,
               action=string,
               direction=string,
               source=string,
               destination=string,
               tcp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               icmp=optional(object({
                 type=number,
                 code=optional(number)
               })),
             }))
        description: List of rules to set on the subnet access control list
        default: '[]'
      - name: target_network_range
        type: string
        description: >-
          The ip address range that should be used for the network acl rules
          generated from the security groups
        default: 0.0.0.0/0
    version: v1.12.2
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: output network_interface_ids {
      - name: output count {
        description: >-
          The number of vsi instances created. Should be the same as
          length(names)
  - platforms: []
    providers:
      - name: ibm
        source: ibm-cloud/ibm
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
        moduleRef:
          id: resource_group
          output: id
      - name: region
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
        scope: global
      - name: ibmcloud_api_key
        type: string
        description: The IBM Cloud api token
        scope: global
      - name: vpc_name
        type: string
        description: The name of the vpc instance
        moduleRef:
          id: vpc
          output: name
      - name: label
        type: string
        description: The label for the server instance
        default: server
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-6-minimal-amd64-2
      - name: vpc_subnet_count
        type: number
        description: Number of vpc subnets
        moduleRef:
          id: subnets
          output: count
      - name: vpc_subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
        moduleRef:
          id: subnets
          output: subnets
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
      - name: ssh_key_id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        moduleRef:
          id: vpcssh
          output: id
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
      - name: init_script
        type: string
        default: ''
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
      - name: tags
        type: list(string)
        default: []
        description: Tags that should be added to the instance
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
      - name: kms_key_crn
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
        moduleRef:
          id: kms_key
          output: crn
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
      - name: security_group_rules
        type: |-
          list(object({
               name=string,
               direction=string,
               remote=optional(string),
               ip_version=optional(string),
               tcp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               icmp=optional(object({
                 type=number,
                 code=optional(number)
               })),
             }))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: '[]'
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
      - name: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        moduleRef:
          id: vpc
          output: base_security_group
      - name: acl_rules
        type: |-
          list(object({
               name=string,
               action=string,
               direction=string,
               source=string,
               destination=string,
               tcp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               icmp=optional(object({
                 type=number,
                 code=optional(number)
               })),
             }))
        description: List of rules to set on the subnet access control list
        default: '[]'
      - name: target_network_range
        type: string
        description: >-
          The ip address range that should be used for the network acl rules
          generated from the security groups
        default: 0.0.0.0/0
    version: v1.12.1
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: output network_interface_ids {
      - name: output count {
        description: >-
          The number of vsi instances created. Should be the same as
          length(names)
  - platforms: []
    providers:
      - name: ibm
        source: ibm-cloud/ibm
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
        moduleRef:
          id: resource_group
          output: id
      - name: region
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
        scope: global
      - name: ibmcloud_api_key
        type: string
        description: The IBM Cloud api token
        scope: global
      - name: vpc_name
        type: string
        description: The name of the vpc instance
        moduleRef:
          id: vpc
          output: name
      - name: label
        type: string
        description: The label for the server instance
        default: server
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-6-minimal-amd64-2
      - name: vpc_subnet_count
        type: number
        description: Number of vpc subnets
        moduleRef:
          id: subnets
          output: count
      - name: vpc_subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
        moduleRef:
          id: subnets
          output: subnets
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
      - name: ssh_key_id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        moduleRef:
          id: vpcssh
          output: id
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
      - name: init_script
        type: string
        default: ''
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
      - name: tags
        type: list(string)
        default: []
        description: Tags that should be added to the instance
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
      - name: kms_key_crn
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
        moduleRef:
          id: kms_key
          output: crn
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
      - name: security_group_rules
        type: |-
          list(object({
               name=string,
               direction=string,
               remote=optional(string),
               ip_version=optional(string),
               tcp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               icmp=optional(object({
                 type=number,
                 code=optional(number)
               })),
             }))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: '[]'
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
      - name: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        moduleRef:
          id: vpc
          output: base_security_group
      - name: acl_rules
        type: |-
          list(object({
               name=string,
               action=string,
               direction=string,
               source=string,
               destination=string,
               tcp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               icmp=optional(object({
                 type=number,
                 code=optional(number)
               })),
             }))
        description: List of rules to set on the subnet access control list
        default: '[]'
      - name: target_network_range
        type: string
        description: >-
          The ip address range that should be used for the network acl rules
          generated from the security groups
        default: 0.0.0.0/0
    version: v1.12.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: output network_interface_ids {
      - name: output count {
        description: >-
          The number of vsi instances created. Should be the same as
          length(names)
  - platforms: []
    providers:
      - name: ibm
        source: ibm-cloud/ibm
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        optional: true
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-5-minimal-amd64-1
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: |-
          list(object({
               name=string,
               direction=string,
               remote=optional(string),
               ip_version=optional(string),
               tcp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number
               })),
               icmp=optional(object({
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
      - name: acl_rules
        type: |-
          list(object({
               name=string,
               action=string,
               direction=string,
               source=string,
               destination=string,
               tcp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               udp=optional(object({
                 port_min=number,
                 port_max=number,
                 source_port_min=number,
                 source_port_max=number
               })),
               icmp=optional(object({
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
      - name: target_network_range
        type: string
        description: >-
          The ip address range that should be used for the network acl rules
          generated from the security groups
        default: 0.0.0.0/0
        optional: true
    version: v1.11.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        optional: true
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-5-minimal-amd64-1
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: list(object({}))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
      - name: acl_rules
        type: list(object({}))
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
      - name: target_network_range
        type: string
        description: >-
          The ip address range that should be used for the network acl rules
          generated from the security groups
        default: 0.0.0.0/0
        optional: true
    version: v1.10.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        optional: true
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-5-minimal-amd64-1
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: list(object({}))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
      - name: acl_rules
        type: list(object({}))
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
      - name: target_network_range
        type: string
        description: >-
          The ip address range that should be used for the network acl rules
          generated from the security groups
        default: 0.0.0.0/0
        optional: true
    version: v1.9.1
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        optional: true
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-5-minimal-amd64-1
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: list(object({}))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
      - name: acl_rules
        type: list(object({}))
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
      - name: target_network_range
        type: string
        description: >-
          The ip address range that should be used for the network acl rules
          generated from the security groups
        default: 0.0.0.0/0
        optional: true
    version: v1.9.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        optional: true
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: list(object({}))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
      - name: acl_rules
        type: list(object({}))
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
    version: v1.8.1
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        optional: true
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: list(object({}))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
      - name: acl_rules
        type: list(object({}))
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
    version: v1.8.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        optional: true
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: list(object({}))
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
      - name: acl_rules
        type: list(object({}))
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
    version: v1.7.1
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        optional: true
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
      - name: acl_rules
        type: string
        description: List of rules to set on the subnet access control list
        default: []
        optional: true
    version: v1.7.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.11.3'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: base_security_group
        moduleRef:
          id: vpc
          output: base_security_group
        type: string
        description: >-
          The id of the base security group to use for the VSI instance. If not
          provided the default VPC security group will be used.
        default: 'null'
        optional: true
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
    version: v1.6.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
    version: v1.5.2
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
    version: v1.5.1
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
    version: v1.5.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: cos_bucket
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: '>= 0.0.1'
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ''
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
    version: v1.4.1
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
      - name: >-
          output count {   value       = var.vpc_subnet_count   description =
          "The number of vsi instances created. Should be the same as
          length(names)" }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: cos_bucket
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: '>= 0.0.1'
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ''
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
      - name: allow_deprecated_image
        type: bool
        description: >-
          Flag indicating that deprecated images should be allowed for use in
          the Virtual Server instance. If the value is `false` and the image is
          deprecated then the module will fail to provision
        default: true
        optional: true
    version: v1.4.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: cos_bucket
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: '>= 0.0.1'
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ''
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
    version: v1.3.2
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
      - id: cos_bucket
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-ibm-object-storage-bucket
            version: '>= 0.0.1'
        optional: true
      - id: kms_key
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-kms-key
            version: '>= 0.0.1'
        optional: true
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: flow_log_cos_bucket_name
        moduleRef:
          id: cos_bucket
          output: bucket_name
        optional: true
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ''
      - name: kms_key_crn
        moduleRef:
          id: kms_key
          output: crn
        optional: true
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
    version: v1.3.1
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ''
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: kms_key_crn
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
    version: v1.3.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
      - name: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
        description: >-
          output network_interface_ids {   value =
          ibm_is_instance.vsi[*].primary_network_interface[0].id }
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ''
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: kms_key_crn
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
      - name: security_group_rules
        type: string
        description: >-
          List of security group rules to set on the bastion security group in
          addition to the SSH rules
        default: []
        optional: true
    version: v1.2.2
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ''
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: kms_key_crn
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
    version: v1.2.1
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
        type: string
        description: SSH key ID to inject into the virtual server instance
        default: ''
        optional: true
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ''
        optional: true
      - name: kms_enabled
        type: bool
        description: Flag indicating that the volumes should be encrypted using a KMS.
        default: false
        optional: true
      - name: kms_key_crn
        type: string
        description: >-
          The crn of the root key in the kms instance. Required if kms_enabled
          is true
        default: ''
        optional: true
      - name: auto_delete_volume
        type: bool
        description: >-
          Flag indicating that any attached volumes should be deleted when the
          instance is deleted
        default: true
        optional: true
    version: v1.2.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
      - name: security_group_id
        description: The id of the security group that was created
      - name: security_group
        description: The security group that was created
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: ssh_key_ids
        type: list(string)
        description: List of SSH key IDs to inject into the virtual server instance
        default: []
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
      - name: flow_log_cos_bucket_name
        type: string
        description: Cloud Object Storage bucket id for flow logs (optional)
        default: ''
        optional: true
    version: v1.1.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
  - platforms: []
    dependencies:
      - id: resource_group
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-resource-group
            version: '>= 2.1.0'
      - id: vpc
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc
            version: '>= 1.0.0'
      - id: subnets
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-subnets
            version: '>= 1.0.0'
      - id: vpcssh
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-vpc-ssh
            version: '>= 1.0.0'
    variables:
      - name: resource_group_id
        moduleRef:
          id: resource_group
          output: id
        type: string
        description: >-
          The id of the IBM Cloud resource group where the VPC has been
          provisioned.
      - name: vpc_name
        moduleRef:
          id: vpc
          output: name
        type: string
        description: The name of the vpc instance
      - name: vpc_subnets
        moduleRef:
          id: subnets
          output: subnets
        type: |-
          list(object({
              label = string
              id    = string
              zone  = string
            }))
        description: List of subnets with labels
      - name: vpc_subnet_count
        moduleRef:
          id: subnets
          output: count
        type: number
        description: Number of vpc subnets
      - name: ssh_key_id
        moduleRef:
          id: vpcssh
          output: id
      - name: ibmcloud_api_key
        scope: global
        type: string
        description: The IBM Cloud api token
      - name: region
        scope: global
        type: string
        description: The IBM Cloud region where the cluster will be/has been installed.
      - name: label
        type: string
        description: The label for the server instance
        default: server
        optional: true
      - name: image_name
        type: string
        description: The name of the image to use for the virtual server
        default: ibm-ubuntu-18-04-1-minimal-amd64-2
        optional: true
      - name: profile_name
        type: string
        description: Instance profile to use for the bastion instance
        default: cx2-2x4
        optional: true
      - name: ssh_key_ids
        type: list(string)
        description: List of SSH key IDs to inject into the virtual server instance
        default: []
        optional: true
      - name: allow_ssh_from
        type: string
        description: >-
          An IP address, a CIDR block, or a single security group identifier to
          allow incoming SSH connection to the virtual server
        default: ''
        optional: true
      - name: create_public_ip
        type: bool
        description: >-
          Set whether to allocate a public IP address for the virtual server
          instance
        default: false
        optional: true
      - name: init_script
        type: string
        description: >-
          Script to run during the instance initialization. Defaults to an
          Ubuntu specific script when set to empty
        default: ''
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be added to the instance
        default: []
        optional: true
    version: v1.0.0
    outputs:
      - name: ids
        description: The instance id
      - name: names
        description: The instance name
      - name: crns
        description: The crn of the instance
      - name: public_ips
        description: The public ips of the instances
      - name: private_ips
        description: The private ips of the instances
      - name: location
        description: The instance location
      - name: service
        description: The name of the service for the instance
      - name: type
        description: The type of the service for the instance
      - name: label
        description: The label used for the instance
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    version: v0.0.0
    variables:
      - name: ibmcloud_api_key
        type: string
        description: The api key for IBM Cloud access
      - name: resource_group_name
        type: string
        description: Resource group where the cluster has been provisioned.
      - name: resource_location
        type: string
        description: Geographic location of the resource (e.g. us-south, us-east)
        default: dal10
        optional: true
      - name: tags
        type: list(string)
        description: Tags that should be applied to the service
        default: []
        optional: true
      - name: name_prefix
        type: string
        description: >-
          The prefix name for the service. If not provided it will default to
          the resource group name
        default: ''
        optional: true
      - name: name
        type: string
        description: >-
          The name that should be used for the service, particularly when
          connecting to an existing service. If not provided then the name will
          be defaulted to {name prefix}-{service}
        default: ''
        optional: true
      - name: plan
        type: string
        description: The type of plan the service instance should run under
        default: entry
        optional: true
      - name: sshPublicKey
        type: string
        description: sshPublicKey that should be applied to the service
